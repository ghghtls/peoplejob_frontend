// Mocks generated by Mockito 5.4.6 from annotations
// in peoplejob_frontend/test/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i14;
import 'dart:convert' as _i16;
import 'dart:io' as _i22;
import 'dart:typed_data' as _i18;

import 'package:cloud_firestore/cloud_firestore.dart' as _i13;
import 'package:cloud_firestore_platform_interface/cloud_firestore_platform_interface.dart'
    as _i12;
import 'package:dio/dio.dart' as _i8;
import 'package:dio/src/adapter.dart' as _i4;
import 'package:dio/src/cancel_token.dart' as _i19;
import 'package:dio/src/dio_mixin.dart' as _i6;
import 'package:dio/src/options.dart' as _i3;
import 'package:dio/src/response.dart' as _i7;
import 'package:dio/src/transformer.dart' as _i5;
import 'package:firebase_auth/firebase_auth.dart' as _i11;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i10;
import 'package:firebase_core/firebase_core.dart' as _i9;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i17;
import 'package:peoplejob_frontend/data/model/job.dart' as _i15;
import 'package:peoplejob_frontend/data/model/notice.dart' as _i28;
import 'package:peoplejob_frontend/services/apply_service.dart' as _i26;
import 'package:peoplejob_frontend/services/auth_service.dart' as _i21;
import 'package:peoplejob_frontend/services/board_service.dart' as _i25;
import 'package:peoplejob_frontend/services/job_service.dart' as _i23;
import 'package:peoplejob_frontend/services/notice_service.dart' as _i27;
import 'package:peoplejob_frontend/services/resume_service.dart' as _i24;
import 'package:shared_preferences/src/shared_preferences_legacy.dart' as _i20;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamedResponse_1 extends _i1.SmartFake
    implements _i2.StreamedResponse {
  _FakeStreamedResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBaseOptions_2 extends _i1.SmartFake implements _i3.BaseOptions {
  _FakeBaseOptions_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeHttpClientAdapter_3 extends _i1.SmartFake
    implements _i4.HttpClientAdapter {
  _FakeHttpClientAdapter_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTransformer_4 extends _i1.SmartFake implements _i5.Transformer {
  _FakeTransformer_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInterceptors_5 extends _i1.SmartFake implements _i6.Interceptors {
  _FakeInterceptors_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_6<T1> extends _i1.SmartFake implements _i7.Response<T1> {
  _FakeResponse_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDio_7 extends _i1.SmartFake implements _i8.Dio {
  _FakeDio_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFirebaseApp_8 extends _i1.SmartFake implements _i9.FirebaseApp {
  _FakeFirebaseApp_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeActionCodeInfo_9 extends _i1.SmartFake
    implements _i10.ActionCodeInfo {
  _FakeActionCodeInfo_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserCredential_10 extends _i1.SmartFake
    implements _i11.UserCredential {
  _FakeUserCredential_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeConfirmationResult_11 extends _i1.SmartFake
    implements _i11.ConfirmationResult {
  _FakeConfirmationResult_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSettings_12 extends _i1.SmartFake implements _i12.Settings {
  _FakeSettings_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCollectionReference_13<T extends Object?> extends _i1.SmartFake
    implements _i13.CollectionReference<T> {
  _FakeCollectionReference_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWriteBatch_14 extends _i1.SmartFake implements _i13.WriteBatch {
  _FakeWriteBatch_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLoadBundleTask_15 extends _i1.SmartFake
    implements _i13.LoadBundleTask {
  _FakeLoadBundleTask_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeQuerySnapshot_16<T1 extends Object?> extends _i1.SmartFake
    implements _i13.QuerySnapshot<T1> {
  _FakeQuerySnapshot_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeQuery_17<T extends Object?> extends _i1.SmartFake
    implements _i13.Query<T> {
  _FakeQuery_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDocumentReference_18<T extends Object?> extends _i1.SmartFake
    implements _i13.DocumentReference<T> {
  _FakeDocumentReference_18(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFuture_19<T1> extends _i1.SmartFake implements _i14.Future<T1> {
  _FakeFuture_19(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserMetadata_20 extends _i1.SmartFake implements _i10.UserMetadata {
  _FakeUserMetadata_20(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMultiFactor_21 extends _i1.SmartFake implements _i11.MultiFactor {
  _FakeMultiFactor_21(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIdTokenResult_22 extends _i1.SmartFake
    implements _i10.IdTokenResult {
  _FakeIdTokenResult_22(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_23 extends _i1.SmartFake implements _i11.User {
  _FakeUser_23(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeJob_24 extends _i1.SmartFake implements _i15.Job {
  _FakeJob_24(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i2.Client {
  @override
  _i14.Future<_i2.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#head, [url], {#headers: headers}),
            returnValue: _i14.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(#head, [url], {#headers: headers}),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(#head, [url], {#headers: headers}),
              ),
            ),
          )
          as _i14.Future<_i2.Response>);

  @override
  _i14.Future<_i2.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#get, [url], {#headers: headers}),
            returnValue: _i14.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(#get, [url], {#headers: headers}),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(#get, [url], {#headers: headers}),
              ),
            ),
          )
          as _i14.Future<_i2.Response>);

  @override
  _i14.Future<_i2.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i16.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i14.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i14.Future<_i2.Response>);

  @override
  _i14.Future<_i2.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i16.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i14.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i14.Future<_i2.Response>);

  @override
  _i14.Future<_i2.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i16.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i14.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #patch,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #patch,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i14.Future<_i2.Response>);

  @override
  _i14.Future<_i2.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i16.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i14.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i14.Future<_i2.Response>);

  @override
  _i14.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#read, [url], {#headers: headers}),
            returnValue: _i14.Future<String>.value(
              _i17.dummyValue<String>(
                this,
                Invocation.method(#read, [url], {#headers: headers}),
              ),
            ),
            returnValueForMissingStub: _i14.Future<String>.value(
              _i17.dummyValue<String>(
                this,
                Invocation.method(#read, [url], {#headers: headers}),
              ),
            ),
          )
          as _i14.Future<String>);

  @override
  _i14.Future<_i18.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readBytes, [url], {#headers: headers}),
            returnValue: _i14.Future<_i18.Uint8List>.value(_i18.Uint8List(0)),
            returnValueForMissingStub: _i14.Future<_i18.Uint8List>.value(
              _i18.Uint8List(0),
            ),
          )
          as _i14.Future<_i18.Uint8List>);

  @override
  _i14.Future<_i2.StreamedResponse> send(_i2.BaseRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#send, [request]),
            returnValue: _i14.Future<_i2.StreamedResponse>.value(
              _FakeStreamedResponse_1(
                this,
                Invocation.method(#send, [request]),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i2.StreamedResponse>.value(
              _FakeStreamedResponse_1(
                this,
                Invocation.method(#send, [request]),
              ),
            ),
          )
          as _i14.Future<_i2.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
    Invocation.method(#close, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i8.Dio {
  @override
  _i3.BaseOptions get options =>
      (super.noSuchMethod(
            Invocation.getter(#options),
            returnValue: _FakeBaseOptions_2(this, Invocation.getter(#options)),
            returnValueForMissingStub: _FakeBaseOptions_2(
              this,
              Invocation.getter(#options),
            ),
          )
          as _i3.BaseOptions);

  @override
  _i4.HttpClientAdapter get httpClientAdapter =>
      (super.noSuchMethod(
            Invocation.getter(#httpClientAdapter),
            returnValue: _FakeHttpClientAdapter_3(
              this,
              Invocation.getter(#httpClientAdapter),
            ),
            returnValueForMissingStub: _FakeHttpClientAdapter_3(
              this,
              Invocation.getter(#httpClientAdapter),
            ),
          )
          as _i4.HttpClientAdapter);

  @override
  _i5.Transformer get transformer =>
      (super.noSuchMethod(
            Invocation.getter(#transformer),
            returnValue: _FakeTransformer_4(
              this,
              Invocation.getter(#transformer),
            ),
            returnValueForMissingStub: _FakeTransformer_4(
              this,
              Invocation.getter(#transformer),
            ),
          )
          as _i5.Transformer);

  @override
  _i6.Interceptors get interceptors =>
      (super.noSuchMethod(
            Invocation.getter(#interceptors),
            returnValue: _FakeInterceptors_5(
              this,
              Invocation.getter(#interceptors),
            ),
            returnValueForMissingStub: _FakeInterceptors_5(
              this,
              Invocation.getter(#interceptors),
            ),
          )
          as _i6.Interceptors);

  @override
  set options(_i3.BaseOptions? _options) => super.noSuchMethod(
    Invocation.setter(#options, _options),
    returnValueForMissingStub: null,
  );

  @override
  set httpClientAdapter(_i4.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(#httpClientAdapter, _httpClientAdapter),
        returnValueForMissingStub: null,
      );

  @override
  set transformer(_i5.Transformer? _transformer) => super.noSuchMethod(
    Invocation.setter(#transformer, _transformer),
    returnValueForMissingStub: null,
  );

  @override
  void close({bool? force = false}) => super.noSuchMethod(
    Invocation.method(#close, [], {#force: force}),
    returnValueForMissingStub: null,
  );

  @override
  _i14.Future<_i7.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i19.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #head,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
              },
            ),
            returnValue: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #head,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #head,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                  },
                ),
              ),
            ),
          )
          as _i14.Future<_i7.Response<T>>);

  @override
  _i14.Future<_i7.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i19.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #headUri,
              [uri],
              {#data: data, #options: options, #cancelToken: cancelToken},
            ),
            returnValue: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #headUri,
                  [uri],
                  {#data: data, #options: options, #cancelToken: cancelToken},
                ),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #headUri,
                  [uri],
                  {#data: data, #options: options, #cancelToken: cancelToken},
                ),
              ),
            ),
          )
          as _i14.Future<_i7.Response<T>>);

  @override
  _i14.Future<_i7.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i19.CancelToken? cancelToken,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #get,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #get,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #get,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i14.Future<_i7.Response<T>>);

  @override
  _i14.Future<_i7.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i19.CancelToken? cancelToken,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #getUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #getUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i14.Future<_i7.Response<T>>);

  @override
  _i14.Future<_i7.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i19.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #post,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #post,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i14.Future<_i7.Response<T>>);

  @override
  _i14.Future<_i7.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i19.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #postUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #postUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #postUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i14.Future<_i7.Response<T>>);

  @override
  _i14.Future<_i7.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i19.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #put,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #put,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i14.Future<_i7.Response<T>>);

  @override
  _i14.Future<_i7.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i19.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #putUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #putUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #putUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i14.Future<_i7.Response<T>>);

  @override
  _i14.Future<_i7.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i19.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #patch,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #patch,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i14.Future<_i7.Response<T>>);

  @override
  _i14.Future<_i7.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i19.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patchUri,
              [uri],
              {
                #data: data,
                #options: options,
                #cancelToken: cancelToken,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #patchUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #patchUri,
                  [uri],
                  {
                    #data: data,
                    #options: options,
                    #cancelToken: cancelToken,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i14.Future<_i7.Response<T>>);

  @override
  _i14.Future<_i7.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i19.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
                #cancelToken: cancelToken,
              },
            ),
            returnValue: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #delete,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #delete,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                    #cancelToken: cancelToken,
                  },
                ),
              ),
            ),
          )
          as _i14.Future<_i7.Response<T>>);

  @override
  _i14.Future<_i7.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i19.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #deleteUri,
              [uri],
              {#data: data, #options: options, #cancelToken: cancelToken},
            ),
            returnValue: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #deleteUri,
                  [uri],
                  {#data: data, #options: options, #cancelToken: cancelToken},
                ),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #deleteUri,
                  [uri],
                  {#data: data, #options: options, #cancelToken: cancelToken},
                ),
              ),
            ),
          )
          as _i14.Future<_i7.Response<T>>);

  @override
  _i14.Future<_i7.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i3.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i19.CancelToken? cancelToken,
    bool? deleteOnError = true,
    _i3.FileAccessMode? fileAccessMode = _i3.FileAccessMode.write,
    String? lengthHeader = 'content-length',
    Object? data,
    _i3.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #download,
              [urlPath, savePath],
              {
                #onReceiveProgress: onReceiveProgress,
                #queryParameters: queryParameters,
                #cancelToken: cancelToken,
                #deleteOnError: deleteOnError,
                #fileAccessMode: fileAccessMode,
                #lengthHeader: lengthHeader,
                #data: data,
                #options: options,
              },
            ),
            returnValue: _i14.Future<_i7.Response<dynamic>>.value(
              _FakeResponse_6<dynamic>(
                this,
                Invocation.method(
                  #download,
                  [urlPath, savePath],
                  {
                    #onReceiveProgress: onReceiveProgress,
                    #queryParameters: queryParameters,
                    #cancelToken: cancelToken,
                    #deleteOnError: deleteOnError,
                    #fileAccessMode: fileAccessMode,
                    #lengthHeader: lengthHeader,
                    #data: data,
                    #options: options,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i7.Response<dynamic>>.value(
              _FakeResponse_6<dynamic>(
                this,
                Invocation.method(
                  #download,
                  [urlPath, savePath],
                  {
                    #onReceiveProgress: onReceiveProgress,
                    #queryParameters: queryParameters,
                    #cancelToken: cancelToken,
                    #deleteOnError: deleteOnError,
                    #fileAccessMode: fileAccessMode,
                    #lengthHeader: lengthHeader,
                    #data: data,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i14.Future<_i7.Response<dynamic>>);

  @override
  _i14.Future<_i7.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i3.ProgressCallback? onReceiveProgress,
    _i19.CancelToken? cancelToken,
    bool? deleteOnError = true,
    _i3.FileAccessMode? fileAccessMode = _i3.FileAccessMode.write,
    String? lengthHeader = 'content-length',
    Object? data,
    _i3.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #downloadUri,
              [uri, savePath],
              {
                #onReceiveProgress: onReceiveProgress,
                #cancelToken: cancelToken,
                #deleteOnError: deleteOnError,
                #fileAccessMode: fileAccessMode,
                #lengthHeader: lengthHeader,
                #data: data,
                #options: options,
              },
            ),
            returnValue: _i14.Future<_i7.Response<dynamic>>.value(
              _FakeResponse_6<dynamic>(
                this,
                Invocation.method(
                  #downloadUri,
                  [uri, savePath],
                  {
                    #onReceiveProgress: onReceiveProgress,
                    #cancelToken: cancelToken,
                    #deleteOnError: deleteOnError,
                    #fileAccessMode: fileAccessMode,
                    #lengthHeader: lengthHeader,
                    #data: data,
                    #options: options,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i7.Response<dynamic>>.value(
              _FakeResponse_6<dynamic>(
                this,
                Invocation.method(
                  #downloadUri,
                  [uri, savePath],
                  {
                    #onReceiveProgress: onReceiveProgress,
                    #cancelToken: cancelToken,
                    #deleteOnError: deleteOnError,
                    #fileAccessMode: fileAccessMode,
                    #lengthHeader: lengthHeader,
                    #data: data,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i14.Future<_i7.Response<dynamic>>);

  @override
  _i14.Future<_i7.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i19.CancelToken? cancelToken,
    _i3.Options? options,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #request,
              [url],
              {
                #data: data,
                #queryParameters: queryParameters,
                #cancelToken: cancelToken,
                #options: options,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #request,
                  [url],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #cancelToken: cancelToken,
                    #options: options,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #request,
                  [url],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #cancelToken: cancelToken,
                    #options: options,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i14.Future<_i7.Response<T>>);

  @override
  _i14.Future<_i7.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i19.CancelToken? cancelToken,
    _i3.Options? options,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #requestUri,
              [uri],
              {
                #data: data,
                #cancelToken: cancelToken,
                #options: options,
                #onSendProgress: onSendProgress,
                #onReceiveProgress: onReceiveProgress,
              },
            ),
            returnValue: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #requestUri,
                  [uri],
                  {
                    #data: data,
                    #cancelToken: cancelToken,
                    #options: options,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(
                  #requestUri,
                  [uri],
                  {
                    #data: data,
                    #cancelToken: cancelToken,
                    #options: options,
                    #onSendProgress: onSendProgress,
                    #onReceiveProgress: onReceiveProgress,
                  },
                ),
              ),
            ),
          )
          as _i14.Future<_i7.Response<T>>);

  @override
  _i14.Future<_i7.Response<T>> fetch<T>(_i3.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
            Invocation.method(#fetch, [requestOptions]),
            returnValue: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(#fetch, [requestOptions]),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i7.Response<T>>.value(
              _FakeResponse_6<T>(
                this,
                Invocation.method(#fetch, [requestOptions]),
              ),
            ),
          )
          as _i14.Future<_i7.Response<T>>);

  @override
  _i8.Dio clone({
    _i3.BaseOptions? options,
    _i6.Interceptors? interceptors,
    _i4.HttpClientAdapter? httpClientAdapter,
    _i5.Transformer? transformer,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#clone, [], {
              #options: options,
              #interceptors: interceptors,
              #httpClientAdapter: httpClientAdapter,
              #transformer: transformer,
            }),
            returnValue: _FakeDio_7(
              this,
              Invocation.method(#clone, [], {
                #options: options,
                #interceptors: interceptors,
                #httpClientAdapter: httpClientAdapter,
                #transformer: transformer,
              }),
            ),
            returnValueForMissingStub: _FakeDio_7(
              this,
              Invocation.method(#clone, [], {
                #options: options,
                #interceptors: interceptors,
                #httpClientAdapter: httpClientAdapter,
                #transformer: transformer,
              }),
            ),
          )
          as _i8.Dio);
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i11.FirebaseAuth {
  @override
  _i9.FirebaseApp get app =>
      (super.noSuchMethod(
            Invocation.getter(#app),
            returnValue: _FakeFirebaseApp_8(this, Invocation.getter(#app)),
            returnValueForMissingStub: _FakeFirebaseApp_8(
              this,
              Invocation.getter(#app),
            ),
          )
          as _i9.FirebaseApp);

  @override
  set app(_i9.FirebaseApp? _app) => super.noSuchMethod(
    Invocation.setter(#app, _app),
    returnValueForMissingStub: null,
  );

  @override
  set tenantId(String? tenantId) => super.noSuchMethod(
    Invocation.setter(#tenantId, tenantId),
    returnValueForMissingStub: null,
  );

  @override
  set customAuthDomain(String? customAuthDomain) => super.noSuchMethod(
    Invocation.setter(#customAuthDomain, customAuthDomain),
    returnValueForMissingStub: null,
  );

  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(
            Invocation.getter(#pluginConstants),
            returnValue: <dynamic, dynamic>{},
            returnValueForMissingStub: <dynamic, dynamic>{},
          )
          as Map<dynamic, dynamic>);

  @override
  _i14.Future<void> useAuthEmulator(
    String? host,
    int? port, {
    bool? automaticHostMapping = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #useAuthEmulator,
              [host, port],
              {#automaticHostMapping: automaticHostMapping},
            ),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> applyActionCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#applyActionCode, [code]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<_i10.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#checkActionCode, [code]),
            returnValue: _i14.Future<_i10.ActionCodeInfo>.value(
              _FakeActionCodeInfo_9(
                this,
                Invocation.method(#checkActionCode, [code]),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i10.ActionCodeInfo>.value(
              _FakeActionCodeInfo_9(
                this,
                Invocation.method(#checkActionCode, [code]),
              ),
            ),
          )
          as _i14.Future<_i10.ActionCodeInfo>);

  @override
  _i14.Future<void> confirmPasswordReset({
    required String? code,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#confirmPasswordReset, [], {
              #code: code,
              #newPassword: newPassword,
            }),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<_i11.UserCredential> createUserWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createUserWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#createUserWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#createUserWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i14.Future<_i11.UserCredential>);

  @override
  _i14.Future<List<String>> fetchSignInMethodsForEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#fetchSignInMethodsForEmail, [email]),
            returnValue: _i14.Future<List<String>>.value(<String>[]),
            returnValueForMissingStub: _i14.Future<List<String>>.value(
              <String>[],
            ),
          )
          as _i14.Future<List<String>>);

  @override
  _i14.Future<_i11.UserCredential> getRedirectResult() =>
      (super.noSuchMethod(
            Invocation.method(#getRedirectResult, []),
            returnValue: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#getRedirectResult, []),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#getRedirectResult, []),
              ),
            ),
          )
          as _i14.Future<_i11.UserCredential>);

  @override
  bool isSignInWithEmailLink(String? emailLink) =>
      (super.noSuchMethod(
            Invocation.method(#isSignInWithEmailLink, [emailLink]),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i14.Stream<_i11.User?> authStateChanges() =>
      (super.noSuchMethod(
            Invocation.method(#authStateChanges, []),
            returnValue: _i14.Stream<_i11.User?>.empty(),
            returnValueForMissingStub: _i14.Stream<_i11.User?>.empty(),
          )
          as _i14.Stream<_i11.User?>);

  @override
  _i14.Stream<_i11.User?> idTokenChanges() =>
      (super.noSuchMethod(
            Invocation.method(#idTokenChanges, []),
            returnValue: _i14.Stream<_i11.User?>.empty(),
            returnValueForMissingStub: _i14.Stream<_i11.User?>.empty(),
          )
          as _i14.Stream<_i11.User?>);

  @override
  _i14.Stream<_i11.User?> userChanges() =>
      (super.noSuchMethod(
            Invocation.method(#userChanges, []),
            returnValue: _i14.Stream<_i11.User?>.empty(),
            returnValueForMissingStub: _i14.Stream<_i11.User?>.empty(),
          )
          as _i14.Stream<_i11.User?>);

  @override
  _i14.Future<void> sendPasswordResetEmail({
    required String? email,
    _i10.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendPasswordResetEmail, [], {
              #email: email,
              #actionCodeSettings: actionCodeSettings,
            }),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> sendSignInLinkToEmail({
    required String? email,
    required _i10.ActionCodeSettings? actionCodeSettings,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendSignInLinkToEmail, [], {
              #email: email,
              #actionCodeSettings: actionCodeSettings,
            }),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> setLanguageCode(String? languageCode) =>
      (super.noSuchMethod(
            Invocation.method(#setLanguageCode, [languageCode]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> setSettings({
    bool? appVerificationDisabledForTesting = false,
    String? userAccessGroup,
    String? phoneNumber,
    String? smsCode,
    bool? forceRecaptchaFlow,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#setSettings, [], {
              #appVerificationDisabledForTesting:
                  appVerificationDisabledForTesting,
              #userAccessGroup: userAccessGroup,
              #phoneNumber: phoneNumber,
              #smsCode: smsCode,
              #forceRecaptchaFlow: forceRecaptchaFlow,
            }),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> setPersistence(_i10.Persistence? persistence) =>
      (super.noSuchMethod(
            Invocation.method(#setPersistence, [persistence]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<_i11.UserCredential> signInAnonymously() =>
      (super.noSuchMethod(
            Invocation.method(#signInAnonymously, []),
            returnValue: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#signInAnonymously, []),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#signInAnonymously, []),
              ),
            ),
          )
          as _i14.Future<_i11.UserCredential>);

  @override
  _i14.Future<_i11.UserCredential> signInWithCredential(
    _i10.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithCredential, [credential]),
            returnValue: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#signInWithCredential, [credential]),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#signInWithCredential, [credential]),
              ),
            ),
          )
          as _i14.Future<_i11.UserCredential>);

  @override
  _i14.Future<_i11.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithCustomToken, [token]),
            returnValue: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#signInWithCustomToken, [token]),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#signInWithCustomToken, [token]),
              ),
            ),
          )
          as _i14.Future<_i11.UserCredential>);

  @override
  _i14.Future<_i11.UserCredential> signInWithEmailAndPassword({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailAndPassword, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#signInWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#signInWithEmailAndPassword, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i14.Future<_i11.UserCredential>);

  @override
  _i14.Future<_i11.UserCredential> signInWithEmailLink({
    required String? email,
    required String? emailLink,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailLink, [], {
              #email: email,
              #emailLink: emailLink,
            }),
            returnValue: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#signInWithEmailLink, [], {
                  #email: email,
                  #emailLink: emailLink,
                }),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#signInWithEmailLink, [], {
                  #email: email,
                  #emailLink: emailLink,
                }),
              ),
            ),
          )
          as _i14.Future<_i11.UserCredential>);

  @override
  _i14.Future<_i11.UserCredential> signInWithProvider(
    _i10.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithProvider, [provider]),
            returnValue: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#signInWithProvider, [provider]),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#signInWithProvider, [provider]),
              ),
            ),
          )
          as _i14.Future<_i11.UserCredential>);

  @override
  _i14.Future<_i11.ConfirmationResult> signInWithPhoneNumber(
    String? phoneNumber, [
    _i11.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i14.Future<_i11.ConfirmationResult>.value(
              _FakeConfirmationResult_11(
                this,
                Invocation.method(#signInWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
            returnValueForMissingStub:
                _i14.Future<_i11.ConfirmationResult>.value(
                  _FakeConfirmationResult_11(
                    this,
                    Invocation.method(#signInWithPhoneNumber, [
                      phoneNumber,
                      verifier,
                    ]),
                  ),
                ),
          )
          as _i14.Future<_i11.ConfirmationResult>);

  @override
  _i14.Future<_i11.UserCredential> signInWithPopup(
    _i10.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPopup, [provider]),
            returnValue: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#signInWithPopup, [provider]),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#signInWithPopup, [provider]),
              ),
            ),
          )
          as _i14.Future<_i11.UserCredential>);

  @override
  _i14.Future<void> signInWithRedirect(_i10.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithRedirect, [provider]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(
            Invocation.method(#verifyPasswordResetCode, [code]),
            returnValue: _i14.Future<String>.value(
              _i17.dummyValue<String>(
                this,
                Invocation.method(#verifyPasswordResetCode, [code]),
              ),
            ),
            returnValueForMissingStub: _i14.Future<String>.value(
              _i17.dummyValue<String>(
                this,
                Invocation.method(#verifyPasswordResetCode, [code]),
              ),
            ),
          )
          as _i14.Future<String>);

  @override
  _i14.Future<void> verifyPhoneNumber({
    String? phoneNumber,
    _i10.PhoneMultiFactorInfo? multiFactorInfo,
    required _i10.PhoneVerificationCompleted? verificationCompleted,
    required _i10.PhoneVerificationFailed? verificationFailed,
    required _i10.PhoneCodeSent? codeSent,
    required _i10.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
    String? autoRetrievedSmsCodeForTesting,
    Duration? timeout = const Duration(seconds: 30),
    int? forceResendingToken,
    _i10.MultiFactorSession? multiFactorSession,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#verifyPhoneNumber, [], {
              #phoneNumber: phoneNumber,
              #multiFactorInfo: multiFactorInfo,
              #verificationCompleted: verificationCompleted,
              #verificationFailed: verificationFailed,
              #codeSent: codeSent,
              #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
              #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
              #timeout: timeout,
              #forceResendingToken: forceResendingToken,
              #multiFactorSession: multiFactorSession,
            }),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> revokeTokenWithAuthorizationCode(
    String? authorizationCode,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#revokeTokenWithAuthorizationCode, [
              authorizationCode,
            ]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);
}

/// A class which mocks [FirebaseFirestore].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseFirestore extends _i1.Mock implements _i13.FirebaseFirestore {
  @override
  _i9.FirebaseApp get app =>
      (super.noSuchMethod(
            Invocation.getter(#app),
            returnValue: _FakeFirebaseApp_8(this, Invocation.getter(#app)),
            returnValueForMissingStub: _FakeFirebaseApp_8(
              this,
              Invocation.getter(#app),
            ),
          )
          as _i9.FirebaseApp);

  @override
  String get databaseURL =>
      (super.noSuchMethod(
            Invocation.getter(#databaseURL),
            returnValue: _i17.dummyValue<String>(
              this,
              Invocation.getter(#databaseURL),
            ),
            returnValueForMissingStub: _i17.dummyValue<String>(
              this,
              Invocation.getter(#databaseURL),
            ),
          )
          as String);

  @override
  String get databaseId =>
      (super.noSuchMethod(
            Invocation.getter(#databaseId),
            returnValue: _i17.dummyValue<String>(
              this,
              Invocation.getter(#databaseId),
            ),
            returnValueForMissingStub: _i17.dummyValue<String>(
              this,
              Invocation.getter(#databaseId),
            ),
          )
          as String);

  @override
  _i12.Settings get settings =>
      (super.noSuchMethod(
            Invocation.getter(#settings),
            returnValue: _FakeSettings_12(this, Invocation.getter(#settings)),
            returnValueForMissingStub: _FakeSettings_12(
              this,
              Invocation.getter(#settings),
            ),
          )
          as _i12.Settings);

  @override
  set app(_i9.FirebaseApp? _app) => super.noSuchMethod(
    Invocation.setter(#app, _app),
    returnValueForMissingStub: null,
  );

  @override
  set databaseURL(String? _databaseURL) => super.noSuchMethod(
    Invocation.setter(#databaseURL, _databaseURL),
    returnValueForMissingStub: null,
  );

  @override
  set databaseId(String? _databaseId) => super.noSuchMethod(
    Invocation.setter(#databaseId, _databaseId),
    returnValueForMissingStub: null,
  );

  @override
  set settings(_i12.Settings? settings) => super.noSuchMethod(
    Invocation.setter(#settings, settings),
    returnValueForMissingStub: null,
  );

  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(
            Invocation.getter(#pluginConstants),
            returnValue: <dynamic, dynamic>{},
            returnValueForMissingStub: <dynamic, dynamic>{},
          )
          as Map<dynamic, dynamic>);

  @override
  _i13.CollectionReference<Map<String, dynamic>> collection(
    String? collectionPath,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#collection, [collectionPath]),
            returnValue: _FakeCollectionReference_13<Map<String, dynamic>>(
              this,
              Invocation.method(#collection, [collectionPath]),
            ),
            returnValueForMissingStub:
                _FakeCollectionReference_13<Map<String, dynamic>>(
                  this,
                  Invocation.method(#collection, [collectionPath]),
                ),
          )
          as _i13.CollectionReference<Map<String, dynamic>>);

  @override
  _i13.WriteBatch batch() =>
      (super.noSuchMethod(
            Invocation.method(#batch, []),
            returnValue: _FakeWriteBatch_14(
              this,
              Invocation.method(#batch, []),
            ),
            returnValueForMissingStub: _FakeWriteBatch_14(
              this,
              Invocation.method(#batch, []),
            ),
          )
          as _i13.WriteBatch);

  @override
  _i14.Future<void> clearPersistence() =>
      (super.noSuchMethod(
            Invocation.method(#clearPersistence, []),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> enablePersistence([
    _i12.PersistenceSettings? persistenceSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#enablePersistence, [persistenceSettings]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i13.LoadBundleTask loadBundle(_i18.Uint8List? bundle) =>
      (super.noSuchMethod(
            Invocation.method(#loadBundle, [bundle]),
            returnValue: _FakeLoadBundleTask_15(
              this,
              Invocation.method(#loadBundle, [bundle]),
            ),
            returnValueForMissingStub: _FakeLoadBundleTask_15(
              this,
              Invocation.method(#loadBundle, [bundle]),
            ),
          )
          as _i13.LoadBundleTask);

  @override
  void useFirestoreEmulator(
    String? host,
    int? port, {
    bool? sslEnabled = false,
    bool? automaticHostMapping = true,
  }) => super.noSuchMethod(
    Invocation.method(
      #useFirestoreEmulator,
      [host, port],
      {#sslEnabled: sslEnabled, #automaticHostMapping: automaticHostMapping},
    ),
    returnValueForMissingStub: null,
  );

  @override
  _i14.Future<_i13.QuerySnapshot<T>> namedQueryWithConverterGet<T>(
    String? name, {
    _i12.GetOptions? options = const _i12.GetOptions(),
    required _i13.FromFirestore<T>? fromFirestore,
    required _i13.ToFirestore<T>? toFirestore,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #namedQueryWithConverterGet,
              [name],
              {
                #options: options,
                #fromFirestore: fromFirestore,
                #toFirestore: toFirestore,
              },
            ),
            returnValue: _i14.Future<_i13.QuerySnapshot<T>>.value(
              _FakeQuerySnapshot_16<T>(
                this,
                Invocation.method(
                  #namedQueryWithConverterGet,
                  [name],
                  {
                    #options: options,
                    #fromFirestore: fromFirestore,
                    #toFirestore: toFirestore,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i13.QuerySnapshot<T>>.value(
              _FakeQuerySnapshot_16<T>(
                this,
                Invocation.method(
                  #namedQueryWithConverterGet,
                  [name],
                  {
                    #options: options,
                    #fromFirestore: fromFirestore,
                    #toFirestore: toFirestore,
                  },
                ),
              ),
            ),
          )
          as _i14.Future<_i13.QuerySnapshot<T>>);

  @override
  _i14.Future<_i13.QuerySnapshot<Map<String, dynamic>>> namedQueryGet(
    String? name, {
    _i12.GetOptions? options = const _i12.GetOptions(),
  }) =>
      (super.noSuchMethod(
            Invocation.method(#namedQueryGet, [name], {#options: options}),
            returnValue:
                _i14.Future<_i13.QuerySnapshot<Map<String, dynamic>>>.value(
                  _FakeQuerySnapshot_16<Map<String, dynamic>>(
                    this,
                    Invocation.method(
                      #namedQueryGet,
                      [name],
                      {#options: options},
                    ),
                  ),
                ),
            returnValueForMissingStub:
                _i14.Future<_i13.QuerySnapshot<Map<String, dynamic>>>.value(
                  _FakeQuerySnapshot_16<Map<String, dynamic>>(
                    this,
                    Invocation.method(
                      #namedQueryGet,
                      [name],
                      {#options: options},
                    ),
                  ),
                ),
          )
          as _i14.Future<_i13.QuerySnapshot<Map<String, dynamic>>>);

  @override
  _i13.Query<Map<String, dynamic>> collectionGroup(String? collectionPath) =>
      (super.noSuchMethod(
            Invocation.method(#collectionGroup, [collectionPath]),
            returnValue: _FakeQuery_17<Map<String, dynamic>>(
              this,
              Invocation.method(#collectionGroup, [collectionPath]),
            ),
            returnValueForMissingStub: _FakeQuery_17<Map<String, dynamic>>(
              this,
              Invocation.method(#collectionGroup, [collectionPath]),
            ),
          )
          as _i13.Query<Map<String, dynamic>>);

  @override
  _i14.Future<void> disableNetwork() =>
      (super.noSuchMethod(
            Invocation.method(#disableNetwork, []),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i13.DocumentReference<Map<String, dynamic>> doc(String? documentPath) =>
      (super.noSuchMethod(
            Invocation.method(#doc, [documentPath]),
            returnValue: _FakeDocumentReference_18<Map<String, dynamic>>(
              this,
              Invocation.method(#doc, [documentPath]),
            ),
            returnValueForMissingStub:
                _FakeDocumentReference_18<Map<String, dynamic>>(
                  this,
                  Invocation.method(#doc, [documentPath]),
                ),
          )
          as _i13.DocumentReference<Map<String, dynamic>>);

  @override
  _i14.Future<void> enableNetwork() =>
      (super.noSuchMethod(
            Invocation.method(#enableNetwork, []),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Stream<void> snapshotsInSync() =>
      (super.noSuchMethod(
            Invocation.method(#snapshotsInSync, []),
            returnValue: _i14.Stream<void>.empty(),
            returnValueForMissingStub: _i14.Stream<void>.empty(),
          )
          as _i14.Stream<void>);

  @override
  _i14.Future<T> runTransaction<T>(
    _i13.TransactionHandler<T>? transactionHandler, {
    Duration? timeout = const Duration(seconds: 30),
    int? maxAttempts = 5,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #runTransaction,
              [transactionHandler],
              {#timeout: timeout, #maxAttempts: maxAttempts},
            ),
            returnValue:
                _i17.ifNotNull(
                  _i17.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #runTransaction,
                      [transactionHandler],
                      {#timeout: timeout, #maxAttempts: maxAttempts},
                    ),
                  ),
                  (T v) => _i14.Future<T>.value(v),
                ) ??
                _FakeFuture_19<T>(
                  this,
                  Invocation.method(
                    #runTransaction,
                    [transactionHandler],
                    {#timeout: timeout, #maxAttempts: maxAttempts},
                  ),
                ),
            returnValueForMissingStub:
                _i17.ifNotNull(
                  _i17.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #runTransaction,
                      [transactionHandler],
                      {#timeout: timeout, #maxAttempts: maxAttempts},
                    ),
                  ),
                  (T v) => _i14.Future<T>.value(v),
                ) ??
                _FakeFuture_19<T>(
                  this,
                  Invocation.method(
                    #runTransaction,
                    [transactionHandler],
                    {#timeout: timeout, #maxAttempts: maxAttempts},
                  ),
                ),
          )
          as _i14.Future<T>);

  @override
  _i14.Future<void> terminate() =>
      (super.noSuchMethod(
            Invocation.method(#terminate, []),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> waitForPendingWrites() =>
      (super.noSuchMethod(
            Invocation.method(#waitForPendingWrites, []),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> setIndexConfiguration({
    required List<_i12.Index>? indexes,
    List<_i12.FieldOverrides>? fieldOverrides,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#setIndexConfiguration, [], {
              #indexes: indexes,
              #fieldOverrides: fieldOverrides,
            }),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> setIndexConfigurationFromJSON(String? json) =>
      (super.noSuchMethod(
            Invocation.method(#setIndexConfigurationFromJSON, [json]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseUser extends _i1.Mock implements _i11.User {
  @override
  bool get emailVerified =>
      (super.noSuchMethod(
            Invocation.getter(#emailVerified),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get isAnonymous =>
      (super.noSuchMethod(
            Invocation.getter(#isAnonymous),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i10.UserMetadata get metadata =>
      (super.noSuchMethod(
            Invocation.getter(#metadata),
            returnValue: _FakeUserMetadata_20(
              this,
              Invocation.getter(#metadata),
            ),
            returnValueForMissingStub: _FakeUserMetadata_20(
              this,
              Invocation.getter(#metadata),
            ),
          )
          as _i10.UserMetadata);

  @override
  List<_i10.UserInfo> get providerData =>
      (super.noSuchMethod(
            Invocation.getter(#providerData),
            returnValue: <_i10.UserInfo>[],
            returnValueForMissingStub: <_i10.UserInfo>[],
          )
          as List<_i10.UserInfo>);

  @override
  String get uid =>
      (super.noSuchMethod(
            Invocation.getter(#uid),
            returnValue: _i17.dummyValue<String>(this, Invocation.getter(#uid)),
            returnValueForMissingStub: _i17.dummyValue<String>(
              this,
              Invocation.getter(#uid),
            ),
          )
          as String);

  @override
  _i11.MultiFactor get multiFactor =>
      (super.noSuchMethod(
            Invocation.getter(#multiFactor),
            returnValue: _FakeMultiFactor_21(
              this,
              Invocation.getter(#multiFactor),
            ),
            returnValueForMissingStub: _FakeMultiFactor_21(
              this,
              Invocation.getter(#multiFactor),
            ),
          )
          as _i11.MultiFactor);

  @override
  _i14.Future<void> delete() =>
      (super.noSuchMethod(
            Invocation.method(#delete, []),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<String?> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdToken, [forceRefresh]),
            returnValue: _i14.Future<String?>.value(),
            returnValueForMissingStub: _i14.Future<String?>.value(),
          )
          as _i14.Future<String?>);

  @override
  _i14.Future<_i10.IdTokenResult> getIdTokenResult([
    bool? forceRefresh = false,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#getIdTokenResult, [forceRefresh]),
            returnValue: _i14.Future<_i10.IdTokenResult>.value(
              _FakeIdTokenResult_22(
                this,
                Invocation.method(#getIdTokenResult, [forceRefresh]),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i10.IdTokenResult>.value(
              _FakeIdTokenResult_22(
                this,
                Invocation.method(#getIdTokenResult, [forceRefresh]),
              ),
            ),
          )
          as _i14.Future<_i10.IdTokenResult>);

  @override
  _i14.Future<_i11.UserCredential> linkWithCredential(
    _i10.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithCredential, [credential]),
            returnValue: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#linkWithCredential, [credential]),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#linkWithCredential, [credential]),
              ),
            ),
          )
          as _i14.Future<_i11.UserCredential>);

  @override
  _i14.Future<_i11.UserCredential> linkWithProvider(
    _i10.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithProvider, [provider]),
            returnValue: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#linkWithProvider, [provider]),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#linkWithProvider, [provider]),
              ),
            ),
          )
          as _i14.Future<_i11.UserCredential>);

  @override
  _i14.Future<_i11.UserCredential> reauthenticateWithProvider(
    _i10.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithProvider, [provider]),
            returnValue: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#reauthenticateWithProvider, [provider]),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#reauthenticateWithProvider, [provider]),
              ),
            ),
          )
          as _i14.Future<_i11.UserCredential>);

  @override
  _i14.Future<_i11.UserCredential> reauthenticateWithPopup(
    _i10.AuthProvider? provider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithPopup, [provider]),
            returnValue: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#reauthenticateWithPopup, [provider]),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#reauthenticateWithPopup, [provider]),
              ),
            ),
          )
          as _i14.Future<_i11.UserCredential>);

  @override
  _i14.Future<void> reauthenticateWithRedirect(_i10.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithRedirect, [provider]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<_i11.UserCredential> linkWithPopup(_i10.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPopup, [provider]),
            returnValue: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#linkWithPopup, [provider]),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#linkWithPopup, [provider]),
              ),
            ),
          )
          as _i14.Future<_i11.UserCredential>);

  @override
  _i14.Future<void> linkWithRedirect(_i10.AuthProvider? provider) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithRedirect, [provider]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<_i11.ConfirmationResult> linkWithPhoneNumber(
    String? phoneNumber, [
    _i11.RecaptchaVerifier? verifier,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#linkWithPhoneNumber, [phoneNumber, verifier]),
            returnValue: _i14.Future<_i11.ConfirmationResult>.value(
              _FakeConfirmationResult_11(
                this,
                Invocation.method(#linkWithPhoneNumber, [
                  phoneNumber,
                  verifier,
                ]),
              ),
            ),
            returnValueForMissingStub:
                _i14.Future<_i11.ConfirmationResult>.value(
                  _FakeConfirmationResult_11(
                    this,
                    Invocation.method(#linkWithPhoneNumber, [
                      phoneNumber,
                      verifier,
                    ]),
                  ),
                ),
          )
          as _i14.Future<_i11.ConfirmationResult>);

  @override
  _i14.Future<_i11.UserCredential> reauthenticateWithCredential(
    _i10.AuthCredential? credential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticateWithCredential, [credential]),
            returnValue: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#reauthenticateWithCredential, [credential]),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i11.UserCredential>.value(
              _FakeUserCredential_10(
                this,
                Invocation.method(#reauthenticateWithCredential, [credential]),
              ),
            ),
          )
          as _i14.Future<_i11.UserCredential>);

  @override
  _i14.Future<void> reload() =>
      (super.noSuchMethod(
            Invocation.method(#reload, []),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> sendEmailVerification([
    _i10.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#sendEmailVerification, [actionCodeSettings]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<_i11.User> unlink(String? providerId) =>
      (super.noSuchMethod(
            Invocation.method(#unlink, [providerId]),
            returnValue: _i14.Future<_i11.User>.value(
              _FakeUser_23(this, Invocation.method(#unlink, [providerId])),
            ),
            returnValueForMissingStub: _i14.Future<_i11.User>.value(
              _FakeUser_23(this, Invocation.method(#unlink, [providerId])),
            ),
          )
          as _i14.Future<_i11.User>);

  @override
  _i14.Future<void> updateEmail(String? newEmail) =>
      (super.noSuchMethod(
            Invocation.method(#updateEmail, [newEmail]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> updatePassword(String? newPassword) =>
      (super.noSuchMethod(
            Invocation.method(#updatePassword, [newPassword]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> updatePhoneNumber(
    _i10.PhoneAuthCredential? phoneCredential,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhoneNumber, [phoneCredential]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(
            Invocation.method(#updateDisplayName, [displayName]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> updatePhotoURL(String? photoURL) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhotoURL, [photoURL]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> updateProfile({String? displayName, String? photoURL}) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [], {
              #displayName: displayName,
              #photoURL: photoURL,
            }),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> verifyBeforeUpdateEmail(
    String? newEmail, [
    _i10.ActionCodeSettings? actionCodeSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#verifyBeforeUpdateEmail, [
              newEmail,
              actionCodeSettings,
            ]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i20.SharedPreferences {
  @override
  Set<String> getKeys() =>
      (super.noSuchMethod(
            Invocation.method(#getKeys, []),
            returnValue: <String>{},
            returnValueForMissingStub: <String>{},
          )
          as Set<String>);

  @override
  Object? get(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#get, [key]),
            returnValueForMissingStub: null,
          )
          as Object?);

  @override
  bool? getBool(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getBool, [key]),
            returnValueForMissingStub: null,
          )
          as bool?);

  @override
  int? getInt(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getInt, [key]),
            returnValueForMissingStub: null,
          )
          as int?);

  @override
  double? getDouble(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getDouble, [key]),
            returnValueForMissingStub: null,
          )
          as double?);

  @override
  String? getString(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getString, [key]),
            returnValueForMissingStub: null,
          )
          as String?);

  @override
  bool containsKey(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#containsKey, [key]),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getStringList, [key]),
            returnValueForMissingStub: null,
          )
          as List<String>?);

  @override
  _i14.Future<bool> setBool(String? key, bool? value) =>
      (super.noSuchMethod(
            Invocation.method(#setBool, [key, value]),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<bool> setInt(String? key, int? value) =>
      (super.noSuchMethod(
            Invocation.method(#setInt, [key, value]),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<bool> setDouble(String? key, double? value) =>
      (super.noSuchMethod(
            Invocation.method(#setDouble, [key, value]),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<bool> setString(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#setString, [key, value]),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<bool> setStringList(String? key, List<String>? value) =>
      (super.noSuchMethod(
            Invocation.method(#setStringList, [key, value]),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<bool> remove(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#remove, [key]),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<bool> commit() =>
      (super.noSuchMethod(
            Invocation.method(#commit, []),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<bool> clear() =>
      (super.noSuchMethod(
            Invocation.method(#clear, []),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<void> reload() =>
      (super.noSuchMethod(
            Invocation.method(#reload, []),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i21.AuthService {
  @override
  _i14.Future<Map<String, dynamic>?> login({
    required String? userid,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#login, [], {
              #userid: userid,
              #password: password,
            }),
            returnValue: _i14.Future<Map<String, dynamic>?>.value(),
            returnValueForMissingStub:
                _i14.Future<Map<String, dynamic>?>.value(),
          )
          as _i14.Future<Map<String, dynamic>?>);

  @override
  _i14.Future<void> logout() =>
      (super.noSuchMethod(
            Invocation.method(#logout, []),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<String?> getToken() =>
      (super.noSuchMethod(
            Invocation.method(#getToken, []),
            returnValue: _i14.Future<String?>.value(),
            returnValueForMissingStub: _i14.Future<String?>.value(),
          )
          as _i14.Future<String?>);

  @override
  _i14.Future<int?> getUserNo() =>
      (super.noSuchMethod(
            Invocation.method(#getUserNo, []),
            returnValue: _i14.Future<int?>.value(),
            returnValueForMissingStub: _i14.Future<int?>.value(),
          )
          as _i14.Future<int?>);

  @override
  _i14.Future<Map<String, String?>> getUserInfo() =>
      (super.noSuchMethod(
            Invocation.method(#getUserInfo, []),
            returnValue: _i14.Future<Map<String, String?>>.value(
              <String, String?>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, String?>>.value(
              <String, String?>{},
            ),
          )
          as _i14.Future<Map<String, String?>>);

  @override
  _i14.Future<Map<String, dynamic>?> getUserProfile() =>
      (super.noSuchMethod(
            Invocation.method(#getUserProfile, []),
            returnValue: _i14.Future<Map<String, dynamic>?>.value(),
            returnValueForMissingStub:
                _i14.Future<Map<String, dynamic>?>.value(),
          )
          as _i14.Future<Map<String, dynamic>?>);

  @override
  _i14.Future<Map<String, dynamic>?> updateUserProfile({
    required String? name,
    required String? email,
    String? phone,
    String? address,
    String? detailAddress,
    String? zipcode,
    String? companyName,
    String? businessNumber,
    String? companyPhone,
    String? companyAddress,
    String? ceoName,
    String? companyType,
    int? employeeCount,
    String? establishedYear,
    String? website,
    String? companyDescription,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserProfile, [], {
              #name: name,
              #email: email,
              #phone: phone,
              #address: address,
              #detailAddress: detailAddress,
              #zipcode: zipcode,
              #companyName: companyName,
              #businessNumber: businessNumber,
              #companyPhone: companyPhone,
              #companyAddress: companyAddress,
              #ceoName: ceoName,
              #companyType: companyType,
              #employeeCount: employeeCount,
              #establishedYear: establishedYear,
              #website: website,
              #companyDescription: companyDescription,
            }),
            returnValue: _i14.Future<Map<String, dynamic>?>.value(),
            returnValueForMissingStub:
                _i14.Future<Map<String, dynamic>?>.value(),
          )
          as _i14.Future<Map<String, dynamic>?>);

  @override
  _i14.Future<bool> changePassword({
    required String? currentPassword,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#changePassword, [], {
              #currentPassword: currentPassword,
              #newPassword: newPassword,
            }),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<String?> uploadProfileImage(_i22.File? imageFile) =>
      (super.noSuchMethod(
            Invocation.method(#uploadProfileImage, [imageFile]),
            returnValue: _i14.Future<String?>.value(),
            returnValueForMissingStub: _i14.Future<String?>.value(),
          )
          as _i14.Future<String?>);

  @override
  _i14.Future<bool> deleteProfileImage() =>
      (super.noSuchMethod(
            Invocation.method(#deleteProfileImage, []),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<bool> deleteAccount() =>
      (super.noSuchMethod(
            Invocation.method(#deleteAccount, []),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<_i2.Response> authenticatedGet(String? endpoint) =>
      (super.noSuchMethod(
            Invocation.method(#authenticatedGet, [endpoint]),
            returnValue: _i14.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(#authenticatedGet, [endpoint]),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(#authenticatedGet, [endpoint]),
              ),
            ),
          )
          as _i14.Future<_i2.Response>);

  @override
  _i14.Future<_i2.Response> authenticatedPost(
    String? endpoint,
    Map<String, dynamic>? body,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#authenticatedPost, [endpoint, body]),
            returnValue: _i14.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(#authenticatedPost, [endpoint, body]),
              ),
            ),
            returnValueForMissingStub: _i14.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(#authenticatedPost, [endpoint, body]),
              ),
            ),
          )
          as _i14.Future<_i2.Response>);
}

/// A class which mocks [JobService].
///
/// See the documentation for Mockito's code generation for more information.
class MockJobService extends _i1.Mock implements _i23.JobService {
  @override
  _i14.Future<List<dynamic>> getAllJobs() =>
      (super.noSuchMethod(
            Invocation.method(#getAllJobs, []),
            returnValue: _i14.Future<List<dynamic>>.value(<dynamic>[]),
            returnValueForMissingStub: _i14.Future<List<dynamic>>.value(
              <dynamic>[],
            ),
          )
          as _i14.Future<List<dynamic>>);

  @override
  _i14.Future<Map<String, dynamic>> getJobDetail(int? jobId) =>
      (super.noSuchMethod(
            Invocation.method(#getJobDetail, [jobId]),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);

  @override
  _i14.Future<bool> createJob(Map<String, dynamic>? jobData) =>
      (super.noSuchMethod(
            Invocation.method(#createJob, [jobData]),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<bool> updateJob(int? jobId, Map<String, dynamic>? jobData) =>
      (super.noSuchMethod(
            Invocation.method(#updateJob, [jobId, jobData]),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<bool> deleteJob(int? jobId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteJob, [jobId]),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<List<dynamic>> searchJobs(String? keyword) =>
      (super.noSuchMethod(
            Invocation.method(#searchJobs, [keyword]),
            returnValue: _i14.Future<List<dynamic>>.value(<dynamic>[]),
            returnValueForMissingStub: _i14.Future<List<dynamic>>.value(
              <dynamic>[],
            ),
          )
          as _i14.Future<List<dynamic>>);

  @override
  _i14.Future<Map<String, dynamic>> saveDraft(Map<String, dynamic>? jobData) =>
      (super.noSuchMethod(
            Invocation.method(#saveDraft, [jobData]),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);

  @override
  _i14.Future<Map<String, dynamic>> getUserDrafts(
    int? userNo, {
    int? page = 0,
    int? size = 10,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getUserDrafts,
              [userNo],
              {#page: page, #size: size},
            ),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);

  @override
  _i14.Future<Map<String, dynamic>> publishJob(int? jobNo, int? userNo) =>
      (super.noSuchMethod(
            Invocation.method(#publishJob, [jobNo, userNo]),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);

  @override
  _i14.Future<Map<String, dynamic>> getPublishedJobs({
    int? page = 0,
    int? size = 10,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getPublishedJobs, [], {
              #page: page,
              #size: size,
            }),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);

  @override
  _i14.Future<Map<String, dynamic>> getUserJobsByStatus(
    int? userNo,
    String? status, {
    int? page = 0,
    int? size = 10,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getUserJobsByStatus,
              [userNo, status],
              {#page: page, #size: size},
            ),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);

  @override
  _i14.Future<Map<String, dynamic>> getUserJobStatusCounts(int? userNo) =>
      (super.noSuchMethod(
            Invocation.method(#getUserJobStatusCounts, [userNo]),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);

  @override
  _i14.Future<Map<String, dynamic>> changeJobStatus(
    int? jobNo,
    String? status,
    int? userNo,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#changeJobStatus, [jobNo, status, userNo]),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);

  @override
  _i14.Future<Map<String, dynamic>> searchPublishedJobs(
    String? keyword, {
    int? page = 0,
    int? size = 10,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #searchPublishedJobs,
              [keyword],
              {#page: page, #size: size},
            ),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);

  @override
  _i14.Future<Map<String, dynamic>> getJobsByCategory(
    String? jobType,
    String? location, {
    int? page = 0,
    int? size = 10,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getJobsByCategory,
              [jobType, location],
              {#page: page, #size: size},
            ),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);

  @override
  _i14.Future<Map<String, dynamic>> createJobPosting(_i15.Job? job) =>
      (super.noSuchMethod(
            Invocation.method(#createJobPosting, [job]),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);

  @override
  _i14.Future<Map<String, dynamic>> updateJobPosting(
    int? jobNo,
    _i15.Job? job,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateJobPosting, [jobNo, job]),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);

  @override
  _i14.Future<Map<String, dynamic>> deleteJobPosting(int? jobNo) =>
      (super.noSuchMethod(
            Invocation.method(#deleteJobPosting, [jobNo]),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);

  @override
  _i14.Future<_i15.Job> getJobPosting(int? jobNo) =>
      (super.noSuchMethod(
            Invocation.method(#getJobPosting, [jobNo]),
            returnValue: _i14.Future<_i15.Job>.value(
              _FakeJob_24(this, Invocation.method(#getJobPosting, [jobNo])),
            ),
            returnValueForMissingStub: _i14.Future<_i15.Job>.value(
              _FakeJob_24(this, Invocation.method(#getJobPosting, [jobNo])),
            ),
          )
          as _i14.Future<_i15.Job>);

  @override
  _i14.Future<Map<String, dynamic>> expireOverdueJobs() =>
      (super.noSuchMethod(
            Invocation.method(#expireOverdueJobs, []),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);

  @override
  _i14.Future<Map<String, dynamic>> expireJob(int? jobNo) =>
      (super.noSuchMethod(
            Invocation.method(#expireJob, [jobNo]),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);

  @override
  _i14.Future<Map<String, dynamic>> getPendingJobs({
    int? page = 0,
    int? size = 10,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getPendingJobs, [], {#page: page, #size: size}),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);

  @override
  _i14.Future<int?> getCurrentUserNo() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUserNo, []),
            returnValue: _i14.Future<int?>.value(),
            returnValueForMissingStub: _i14.Future<int?>.value(),
          )
          as _i14.Future<int?>);

  @override
  _i14.Future<bool> isTokenValid() =>
      (super.noSuchMethod(
            Invocation.method(#isTokenValid, []),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  String parseErrorMessage(dynamic error) =>
      (super.noSuchMethod(
            Invocation.method(#parseErrorMessage, [error]),
            returnValue: _i17.dummyValue<String>(
              this,
              Invocation.method(#parseErrorMessage, [error]),
            ),
            returnValueForMissingStub: _i17.dummyValue<String>(
              this,
              Invocation.method(#parseErrorMessage, [error]),
            ),
          )
          as String);

  @override
  T? safeGet<T>(Map<String, dynamic>? data, String? key, [T? defaultValue]) =>
      (super.noSuchMethod(
            Invocation.method(#safeGet, [data, key, defaultValue]),
            returnValueForMissingStub: null,
          )
          as T?);

  @override
  Map<String, dynamic> parsePagingInfo(Map<String, dynamic>? response) =>
      (super.noSuchMethod(
            Invocation.method(#parsePagingInfo, [response]),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  _i14.Future<Map<String, dynamic>> batchChangeStatus(
    List<int>? jobNos,
    String? status,
    int? userNo,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#batchChangeStatus, [jobNos, status, userNo]),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);

  @override
  _i14.Future<Map<String, dynamic>> batchDeleteJobs(List<int>? jobNos) =>
      (super.noSuchMethod(
            Invocation.method(#batchDeleteJobs, [jobNos]),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);
}

/// A class which mocks [ResumeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockResumeService extends _i1.Mock implements _i24.ResumeService {
  @override
  _i14.Future<List<dynamic>> getAllResumes() =>
      (super.noSuchMethod(
            Invocation.method(#getAllResumes, []),
            returnValue: _i14.Future<List<dynamic>>.value(<dynamic>[]),
            returnValueForMissingStub: _i14.Future<List<dynamic>>.value(
              <dynamic>[],
            ),
          )
          as _i14.Future<List<dynamic>>);

  @override
  _i14.Future<List<dynamic>> getUserResumes(int? userNo) =>
      (super.noSuchMethod(
            Invocation.method(#getUserResumes, [userNo]),
            returnValue: _i14.Future<List<dynamic>>.value(<dynamic>[]),
            returnValueForMissingStub: _i14.Future<List<dynamic>>.value(
              <dynamic>[],
            ),
          )
          as _i14.Future<List<dynamic>>);

  @override
  _i14.Future<Map<String, dynamic>> getResumeDetail(int? resumeId) =>
      (super.noSuchMethod(
            Invocation.method(#getResumeDetail, [resumeId]),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);

  @override
  _i14.Future<int?> createResume(Map<String, dynamic>? resumeData) =>
      (super.noSuchMethod(
            Invocation.method(#createResume, [resumeData]),
            returnValue: _i14.Future<int?>.value(),
            returnValueForMissingStub: _i14.Future<int?>.value(),
          )
          as _i14.Future<int?>);

  @override
  _i14.Future<bool> updateResume(
    int? resumeId,
    Map<String, dynamic>? resumeData,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateResume, [resumeId, resumeData]),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<bool> deleteResume(int? resumeId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteResume, [resumeId]),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<List<dynamic>> searchResumes(String? keyword) =>
      (super.noSuchMethod(
            Invocation.method(#searchResumes, [keyword]),
            returnValue: _i14.Future<List<dynamic>>.value(<dynamic>[]),
            returnValueForMissingStub: _i14.Future<List<dynamic>>.value(
              <dynamic>[],
            ),
          )
          as _i14.Future<List<dynamic>>);

  @override
  _i14.Future<List<dynamic>> getResumesByJobType(String? jobType) =>
      (super.noSuchMethod(
            Invocation.method(#getResumesByJobType, [jobType]),
            returnValue: _i14.Future<List<dynamic>>.value(<dynamic>[]),
            returnValueForMissingStub: _i14.Future<List<dynamic>>.value(
              <dynamic>[],
            ),
          )
          as _i14.Future<List<dynamic>>);

  @override
  _i14.Future<List<dynamic>> getResumesByLocation(String? location) =>
      (super.noSuchMethod(
            Invocation.method(#getResumesByLocation, [location]),
            returnValue: _i14.Future<List<dynamic>>.value(<dynamic>[]),
            returnValueForMissingStub: _i14.Future<List<dynamic>>.value(
              <dynamic>[],
            ),
          )
          as _i14.Future<List<dynamic>>);
}

/// A class which mocks [BoardService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBoardService extends _i1.Mock implements _i25.BoardService {
  @override
  _i14.Future<List<dynamic>> getAllBoards() =>
      (super.noSuchMethod(
            Invocation.method(#getAllBoards, []),
            returnValue: _i14.Future<List<dynamic>>.value(<dynamic>[]),
            returnValueForMissingStub: _i14.Future<List<dynamic>>.value(
              <dynamic>[],
            ),
          )
          as _i14.Future<List<dynamic>>);

  @override
  _i14.Future<List<dynamic>> getBoardsByCategory(String? category) =>
      (super.noSuchMethod(
            Invocation.method(#getBoardsByCategory, [category]),
            returnValue: _i14.Future<List<dynamic>>.value(<dynamic>[]),
            returnValueForMissingStub: _i14.Future<List<dynamic>>.value(
              <dynamic>[],
            ),
          )
          as _i14.Future<List<dynamic>>);

  @override
  _i14.Future<Map<String, dynamic>> getBoardDetail(int? boardNo) =>
      (super.noSuchMethod(
            Invocation.method(#getBoardDetail, [boardNo]),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);

  @override
  _i14.Future<bool> createBoard(Map<String, dynamic>? boardData) =>
      (super.noSuchMethod(
            Invocation.method(#createBoard, [boardData]),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<bool> updateBoard(
    int? boardNo,
    Map<String, dynamic>? boardData,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateBoard, [boardNo, boardData]),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<bool> deleteBoard(int? boardNo) =>
      (super.noSuchMethod(
            Invocation.method(#deleteBoard, [boardNo]),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<List<dynamic>> searchBoards(String? keyword) =>
      (super.noSuchMethod(
            Invocation.method(#searchBoards, [keyword]),
            returnValue: _i14.Future<List<dynamic>>.value(<dynamic>[]),
            returnValueForMissingStub: _i14.Future<List<dynamic>>.value(
              <dynamic>[],
            ),
          )
          as _i14.Future<List<dynamic>>);

  @override
  _i14.Future<void> increaseViewCount(int? boardNo) =>
      (super.noSuchMethod(
            Invocation.method(#increaseViewCount, [boardNo]),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);
}

/// A class which mocks [ApplyService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApplyService extends _i1.Mock implements _i26.ApplyService {
  @override
  _i14.Future<bool> applyToJob({
    required int? jobOpeningNo,
    required int? resumeNo,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#applyToJob, [], {
              #jobOpeningNo: jobOpeningNo,
              #resumeNo: resumeNo,
            }),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<List<dynamic>> getMyApplications() =>
      (super.noSuchMethod(
            Invocation.method(#getMyApplications, []),
            returnValue: _i14.Future<List<dynamic>>.value(<dynamic>[]),
            returnValueForMissingStub: _i14.Future<List<dynamic>>.value(
              <dynamic>[],
            ),
          )
          as _i14.Future<List<dynamic>>);

  @override
  _i14.Future<List<dynamic>> getJobApplications(int? jobOpeningNo) =>
      (super.noSuchMethod(
            Invocation.method(#getJobApplications, [jobOpeningNo]),
            returnValue: _i14.Future<List<dynamic>>.value(<dynamic>[]),
            returnValueForMissingStub: _i14.Future<List<dynamic>>.value(
              <dynamic>[],
            ),
          )
          as _i14.Future<List<dynamic>>);

  @override
  _i14.Future<List<dynamic>> getAllApplications() =>
      (super.noSuchMethod(
            Invocation.method(#getAllApplications, []),
            returnValue: _i14.Future<List<dynamic>>.value(<dynamic>[]),
            returnValueForMissingStub: _i14.Future<List<dynamic>>.value(
              <dynamic>[],
            ),
          )
          as _i14.Future<List<dynamic>>);

  @override
  _i14.Future<bool> cancelApplication(int? applyNo) =>
      (super.noSuchMethod(
            Invocation.method(#cancelApplication, [applyNo]),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<bool> checkApplicationStatus({
    required int? jobOpeningNo,
    required int? resumeNo,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#checkApplicationStatus, [], {
              #jobOpeningNo: jobOpeningNo,
              #resumeNo: resumeNo,
            }),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<bool> hasAppliedToJob(int? jobOpeningNo) =>
      (super.noSuchMethod(
            Invocation.method(#hasAppliedToJob, [jobOpeningNo]),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<Map<String, dynamic>> getApplicationStats() =>
      (super.noSuchMethod(
            Invocation.method(#getApplicationStats, []),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);
}

/// A class which mocks [NoticeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNoticeService extends _i1.Mock implements _i27.NoticeService {
  @override
  _i14.Future<List<_i28.Notice>> getAllNotices() =>
      (super.noSuchMethod(
            Invocation.method(#getAllNotices, []),
            returnValue: _i14.Future<List<_i28.Notice>>.value(<_i28.Notice>[]),
            returnValueForMissingStub: _i14.Future<List<_i28.Notice>>.value(
              <_i28.Notice>[],
            ),
          )
          as _i14.Future<List<_i28.Notice>>);

  @override
  _i14.Future<Map<String, dynamic>> getNoticesWithPaging({
    int? page = 0,
    int? size = 10,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getNoticesWithPaging, [], {
              #page: page,
              #size: size,
            }),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);

  @override
  _i14.Future<_i28.Notice?> getNoticeDetail(int? noticeId) =>
      (super.noSuchMethod(
            Invocation.method(#getNoticeDetail, [noticeId]),
            returnValue: _i14.Future<_i28.Notice?>.value(),
            returnValueForMissingStub: _i14.Future<_i28.Notice?>.value(),
          )
          as _i14.Future<_i28.Notice?>);

  @override
  _i14.Future<List<_i28.Notice>> getImportantNotices() =>
      (super.noSuchMethod(
            Invocation.method(#getImportantNotices, []),
            returnValue: _i14.Future<List<_i28.Notice>>.value(<_i28.Notice>[]),
            returnValueForMissingStub: _i14.Future<List<_i28.Notice>>.value(
              <_i28.Notice>[],
            ),
          )
          as _i14.Future<List<_i28.Notice>>);

  @override
  _i14.Future<Map<String, dynamic>> searchNotices({
    required String? keyword,
    int? page = 0,
    int? size = 10,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#searchNotices, [], {
              #keyword: keyword,
              #page: page,
              #size: size,
            }),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);

  @override
  _i14.Future<List<_i28.Notice>> getRecentNotices({int? limit = 5}) =>
      (super.noSuchMethod(
            Invocation.method(#getRecentNotices, [], {#limit: limit}),
            returnValue: _i14.Future<List<_i28.Notice>>.value(<_i28.Notice>[]),
            returnValueForMissingStub: _i14.Future<List<_i28.Notice>>.value(
              <_i28.Notice>[],
            ),
          )
          as _i14.Future<List<_i28.Notice>>);

  @override
  _i14.Future<int?> createNotice(_i28.Notice? notice) =>
      (super.noSuchMethod(
            Invocation.method(#createNotice, [notice]),
            returnValue: _i14.Future<int?>.value(),
            returnValueForMissingStub: _i14.Future<int?>.value(),
          )
          as _i14.Future<int?>);

  @override
  _i14.Future<bool> updateNotice(_i28.Notice? notice) =>
      (super.noSuchMethod(
            Invocation.method(#updateNotice, [notice]),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<bool> deleteNotice(int? noticeId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteNotice, [noticeId]),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<Map<String, dynamic>> getAllNoticesForAdmin({
    int? page = 0,
    int? size = 10,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getAllNoticesForAdmin, [], {
              #page: page,
              #size: size,
            }),
            returnValue: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i14.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i14.Future<Map<String, dynamic>>);

  @override
  _i14.Future<bool> toggleNoticeStatus(int? noticeId) =>
      (super.noSuchMethod(
            Invocation.method(#toggleNoticeStatus, [noticeId]),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<bool> toggleImportantStatus(int? noticeId) =>
      (super.noSuchMethod(
            Invocation.method(#toggleImportantStatus, [noticeId]),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<bool> permanentDeleteNotice(int? noticeId) =>
      (super.noSuchMethod(
            Invocation.method(#permanentDeleteNotice, [noticeId]),
            returnValue: _i14.Future<bool>.value(false),
            returnValueForMissingStub: _i14.Future<bool>.value(false),
          )
          as _i14.Future<bool>);

  @override
  _i14.Future<Map<String, dynamic>?> getNoticeStatistics() =>
      (super.noSuchMethod(
            Invocation.method(#getNoticeStatistics, []),
            returnValue: _i14.Future<Map<String, dynamic>?>.value(),
            returnValueForMissingStub:
                _i14.Future<Map<String, dynamic>?>.value(),
          )
          as _i14.Future<Map<String, dynamic>?>);
}
